// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.
#pragma once

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include <frc2/command/SubsystemBase.h>
#include <frc/DoubleSolenoid.h>
#include <frc/PneumaticsModuleType.h>

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

/**
 *
 *
 * @author ExampleAuthor
 */
class Pnenumatics: public frc2::SubsystemBase {
private:
    // It's desirable that everything possible is private except
    // for methods that implement subsystem capabilities
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
frc::DoubleSolenoid m_disco{3, frc::PneumaticsModuleType::REVPH, 4, 5};
frc::DoubleSolenoid m_arm2{3, frc::PneumaticsModuleType::REVPH, 2, 3};
frc::DoubleSolenoid m_arm1{3, frc::PneumaticsModuleType::REVPH, 0, 1};

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONSPnenumatics::m_disco.Set(frc::DoubleSolenoid::kForward);
    int armStage = 0;
    bool isOpen = false;
public:
Pnenumatics();

    void Periodic() override;
    void SimulationPeriodic() override;
    void MoveStage(int stage);
    void IncStage();
    void DecStage();
    int GetStage();
    void CloseClaw();
    void OpenClaw();
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    
};
